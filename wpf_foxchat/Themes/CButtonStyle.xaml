<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:wpf_foxchat.Themes"
                    xmlns:ctrl ="clr-namespace:wpf_foxchat.Controls">

    <!--===============================  Style của Button tròn hover text ===============================-->
    <Style x:Key="ButtonIconHover" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="12">
                        <!--Khi hover vào mới hiện thị vòng tròn-->
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFD6D6D6"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" >
                        </ContentPresenter>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#393939"
                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--===============================  Style của ToggleButton tròn hover text ===============================-->
    <Style x:Key="ToggleButtonIconHover" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="12">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" >
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#FDF4BF"
                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--===============================  Style của Button chỉ hover text ===============================-->

    <Style x:Key="ButtonChangeHover" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" >
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#D0D2D5"
                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--===============================  Giao diện của Control CButton ===============================-->

    <Style TargetType="{x:Type ctrl:CButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background"      Value="LightSalmon"/>
        <Setter Property="Foreground"      Value="{DynamicResource  TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderRadius"    Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:CButton}">
                    <Border CornerRadius="{TemplateBinding BorderRadius}"
                            Visibility="{TemplateBinding Visibility}"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--=============================== Xử lý sự kiện =============================== -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--Không thể bidding hoặc thay màu static vào đây được-->
                            <ColorAnimation To="#D0D2D5" 
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--===============================  Giao diện của control CButton ===============================-->
    <Style x:Key="BTN_FunctionStyle" TargetType="{x:Type ctrl:CButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop x:Name="GRAID_0" Offset="0" Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:CButton}}, Path=GradientStartColor}" />
                        <GradientStop x:Name="GRAID_1" Offset="1" Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:CButton}}, Path=GradientEndColor  }" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"      Value="Black"/>
        <Setter Property="Opacity"         Value="1"/>
        <Setter Property="BorderRadius"    Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:CButton}">
                    <Border x:Name="BOR_CButtonFun"
                            CornerRadius="{TemplateBinding BorderRadius}"
                            Opacity="{TemplateBinding Opacity}"
                            Visibility="{TemplateBinding Visibility}"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter Content="{TemplateBinding Content}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BOR_CButtonFun" Property="BorderBrush" Value="#3C7FB1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Thuộc tính của ButtonVM sẽ được Binding tương ứng nếu sử dụng style này-->
    <Style x:Key="CButtonStyleVM" TargetType="{x:Type ctrl:CButton}" BasedOn="{StaticResource {x:Type ctrl:CButton}}">
        <Setter Property="Visibility"  Value="{Binding  Visibility}"/>
        <Setter Property="IsEnabled"   Value="{Binding  IsEnabled}"/>
    </Style>

    <Style x:Key="CButtonFuncStyleVM" TargetType="{x:Type ctrl:CButton}" BasedOn="{StaticResource BTN_FunctionStyle}">
        <Setter Property="Visibility"  Value="{Binding  Visibility}"/>
        <Setter Property="IsEnabled"   Value="{Binding  IsEnabled}"/>
    </Style>

    <Style x:Key="ButtonStyleVM" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Visibility"     Value="{Binding  Visibility}"/>
        <Setter Property="IsEnabled"      Value="{Binding  IsEnabled}"/>
    </Style>

</ResourceDictionary>